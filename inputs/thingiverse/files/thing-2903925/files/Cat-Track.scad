/*
Code by Patrick Gaston, 5/2018. Use at your own risk. I make no guarantee that the object generated by this code is safe for printers, humans or other animals.
This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation.
*/

width_print_bed = 300; 
count_slots = 4;
thickness_wall = 2.4;
radius_ball = 20; //Standard ping pong ball radius = 20mm.
height_foot = 3;
resolution = 64;

radius_tube_inner = radius_ball + 4;
radius_tube_outer = radius_tube_inner + thickness_wall;
radius_track = (width_print_bed / 2) - 10 - radius_tube_outer;
width_foot = 2 * radius_tube_outer/3;
radius_paw_slot = radius_ball - 2; //Should be smaller than diameter of ball, so ball doesn't come out.
arc_slot = 360 / (2*count_slots); //Degrees of arc over which slot extends;
angle_start_slot = arc_slot / 2; //1st slot starts here;

difference()
    {
    Outer_Tube();
    Inner_Tube();
    Ball_Insertion_Hole();
    Multi_Slot();
    }

module Single_Slot()
    {
    color("Chartreuse")
        {
        translate([0,0,radius_tube_outer + radius_paw_slot])
        rotate_extrude($fn = resolution, angle = arc_slot, convexity = 2)
        translate([radius_track + (radius_tube_outer/2),0,0])  
        circle($fn = resolution, r = radius_paw_slot);
            
        translate([radius_track + (radius_tube_outer/2),0,radius_tube_outer + radius_paw_slot])
        sphere($fn = resolution, r = radius_paw_slot);

        rotate([0,0,arc_slot])
        translate([radius_track + (radius_tube_outer/2),0,radius_tube_outer + radius_paw_slot])
        sphere($fn = resolution, r = radius_paw_slot);
        }
    }
module Multi_Slot()
    {
     for (i = [1 : 1 : count_slots])   
         {
         rotate([0,0,angle_start_slot + (2*i*arc_slot)])
         Single_Slot();
         }
    }
module Foot()
    {
    color("Fuchsia")
    linear_extrude(height = height_foot, convexity = 10)
    difference()
        {
        circle($fn = resolution, r = radius_track + (width_foot/2));
        circle($fn = resolution, r = radius_track - (width_foot/2));
        }
    }
module Outer_Tube()
    {
    color("SkyBlue")
        {
        Foot();
        translate([0,0,radius_tube_outer])
        rotate_extrude($fn = resolution, angle = 360, convexity = 2)
        translate([radius_track,0,0])
        circle($fn = resolution, r = radius_tube_outer);
        }
    }
module Inner_Tube()
    {
    color("SkyBlue")
    translate([0,0,radius_tube_outer])
    rotate_extrude($fn = resolution, angle = 360, convexity = 2)
    translate([radius_track,0,0])
    circle($fn = resolution, r = radius_tube_inner);
    }
module Ball_Insertion_Hole()
    {
    translate([radius_track,0,radius_tube_outer]) 
    cylinder($fn = resolution, h = radius_tube_outer + 1, r = radius_ball + 2);  
    }