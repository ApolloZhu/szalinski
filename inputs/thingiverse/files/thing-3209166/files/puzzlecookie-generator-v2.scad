//number of pieces horizontal
counth=3; // [0:20]
//number of pieces vertical
countv=3; // [0:20]
//overall length (mm)
olength=100; // [500]
//overall width (mm)
owidth=150; // [500]
//walls thickness (mm)
walls=1; // [0.1:0.1:4]
//height (incl. brim)
cutterheight=20; //[5:50]
//brim height
brimheight=2; // [5]
//inner brim
innerbrim=1; // [0:0.1:5]
//outer brim
outerbrim=2; // [0:0.1:5]
//Smoothness 
faces=50; // [10:200]


fieldsizeh=(olength-(walls*(counth+1)))/counth;
fieldsizev=(owidth-(walls*(countv+1)))/countv;

difference()
{
    union()
    {
        translate([0,0,0.01])
        cube([olength,owidth,cutterheight-0.02]);
        translate([-outerbrim,-outerbrim,0.01])
        cube([olength+(2*outerbrim),owidth+(2*outerbrim),brimheight-0.02]);
    }
    for(h=[1:counth])
    {
        for(v=[1:countv])
        {
            translate([walls+((fieldsizeh/2)+((h-1)*(fieldsizeh+walls))),walls+((fieldsizev/2)+((v-1)*(fieldsizev+walls))),0])
            if (h==1) 
            {
                if(v==1)
                {
                    p11();
                }
                else
                {
                    if(v==countv)
                    {
                        if(v%2==1)
                        {
                            p1lo();
                        }
                        else
                        {
                            p1l();
                        }
                    }
                    else
                    {
                        if(v%2==1)
                        {
                            p1o();
                        }
                        else
                        {
                            p1e();
                        }
                    }
                }
            }
            else
            {
                if (h==counth) 
                {
                    if(h%2==1)
                    {
                        if(v==1)
                        {
                            pl1o();
                        }
                        else
                        {
                            if(v==countv)
                            {
                                if(v%2==1)
                                {
                                    pallo();
                                }
                                else
                                {
                                    pllo();
                                }
                            }
                            else
                            {
                                if(v%2==1)
                                {
                                    ploo();
                                }
                                else
                                {
                                    pleo();
                                }
                            }
                        }
                    }
                    else
                    {
                        if(v==1)
                        {
                            pl1();
                        }
                        else
                        {
                            if(v==countv)
                            {
                                if(v%2==1)
                                {
                                    plloo();
                                }
                                else
                                {
                                    pll();
                                }
                            }
                            else
                            {
                                if(v%2==1)
                                {
                                    plo();
                                }
                                else
                                {
                                    ple();
                                }
                            }
                        }
                    }
                }
                else
                {
                    if(h%2==1)
                    {
                        if(v==1)
                        {
                            po1();
                        }
                        else
                        {
                            if(v==countv)
                            {
                                if(v%2==1)
                                {
                                    polo();
                                }
                                else
                                {
                                    pol();
                                }
                            }
                            else
                            {
                                if(v%2==1)
                                {
                                    poo();
                                }
                                else
                                {
                                    poe();
                                }
                            }
                        }
                    }
                    else
                    {
                        if(v==1)
                        {
                            pe1();
                        }
                        else
                        {
                            if(v==countv)
                            {
                                if(v%2==1)
                                {
                                    pelo();
                                }
                                else
                                {
                                    pel();
                                }
                            }
                            else
                            {
                                if(v%2==1)
                                {
                                    peo();
                                }
                                else
                                {
                                    pee();
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

//pieces (p[x,y])
module p11()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([0,(owidth/countv)/(8/3),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,(owidth/countv)/(8/3),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([(olength/counth)/1.6,0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([(olength/counth)/1.6,0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}


module p1o()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([0,(owidth/countv)/(8/3),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,(owidth/countv)/(8/3),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([0,-((owidth/countv)/(8/3)),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,-((owidth/countv)/(8/3)),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([(olength/counth)/1.6,0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([(olength/counth)/1.6,0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);

}
module p1e()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
    }
    translate([(olength/counth)/1.6,0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([(olength/counth)/1.6,0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([0,(owidth/countv)/1.6,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,(owidth/countv)/1.6,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([0,-((owidth/countv)/1.6),brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,-((owidth/countv)/1.6),0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module po1()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([0,(owidth/countv)/(8/3),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,(owidth/countv)/(8/3),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([(olength/counth)/1.6,0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([(olength/counth)/1.6,0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([-((olength/counth)/1.6),0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([-((olength/counth)/1.6),0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module pe1()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
        translate([0,0,(brimheight/2)])
        cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([(olength/counth)/(8/3),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([(olength/counth)/(8/3),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([-((olength/counth)/(8/3)),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([-((olength/counth)/(8/3)),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([0,(owidth/countv)/1.6,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,(owidth/countv)/1.6,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module poo()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([0,(owidth/countv)/(8/3),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,(owidth/countv)/(8/3),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([0,-((owidth/countv)/(8/3)),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,-((owidth/countv)/(8/3)),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([(olength/counth)/1.6,0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([(olength/counth)/1.6,0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([-((olength/counth)/1.6),0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([-((olength/counth)/1.6),0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module pee()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([0,(owidth/countv)/(8/3),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,(owidth/countv)/(8/3),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([0,-((owidth/countv)/(8/3)),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,-((owidth/countv)/(8/3)),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([(olength/counth)/(8/3),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([(olength/counth)/(8/3),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([-((olength/counth)/(8/3)),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([-((olength/counth)/(8/3)),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    
}
module poe()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
    }
    translate([(olength/counth)/1.6,0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([(olength/counth)/1.6,0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([-((olength/counth)/1.6),0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([-((olength/counth)/1.6),0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([0,(owidth/countv)/1.6,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,(owidth/countv)/1.6,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([0,-((owidth/countv)/1.6),brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,-((owidth/countv)/1.6),0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module peo()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([(olength/counth)/(8/3),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([(olength/counth)/(8/3),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([-((olength/counth)/(8/3)),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([-((olength/counth)/(8/3)),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([0,(owidth/countv)/1.6,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,(owidth/countv)/1.6,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([0,-((owidth/countv)/1.6),brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,-((owidth/countv)/1.6),0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module pll()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
        translate([0,0,(brimheight/2)])
        cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([0,-((owidth/countv)/(8/3)),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,-((owidth/countv)/(8/3)),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([-((olength/counth)/(8/3)),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([-((olength/counth)/(8/3)),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
}
module pol()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
        translate([0,0,(brimheight/2)])
        cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
    }
    translate([(olength/counth)/1.6,0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([(olength/counth)/1.6,0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([-((olength/counth)/1.6),0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([-((olength/counth)/1.6),0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([0,-((owidth/countv)/1.6),brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,-((owidth/countv)/1.6),0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module pel()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([0,-((owidth/countv)/(8/3)),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,-((owidth/countv)/(8/3)),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([(olength/counth)/(8/3),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([(olength/counth)/(8/3),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([-((olength/counth)/(8/3)),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([-((olength/counth)/(8/3)),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
}
module ple()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([0,(owidth/countv)/(8/3),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,(owidth/countv)/(8/3),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([0,-((owidth/countv)/(8/3)),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,-((owidth/countv)/(8/3)),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([-((olength/counth)/(8/3)),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([-((olength/counth)/(8/3)),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
}
module plo()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([-((olength/counth)/(8/3)),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([-((olength/counth)/(8/3)),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([0,(owidth/countv)/1.6,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,(owidth/countv)/1.6,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([0,-((owidth/countv)/1.6),brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,-((owidth/countv)/1.6),0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}

module pl1()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([-((olength/counth)/(8/3)),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([-((olength/counth)/(8/3)),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([0,(owidth/countv)/1.6,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,(owidth/countv)/1.6,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
    
module p1l()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
    }
    translate([(olength/counth)/1.6,0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([(olength/counth)/1.6,0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([0,-((owidth/countv)/1.6),brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,-((owidth/countv)/1.6),0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module pllo()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
    }
    translate([-((olength/counth)/1.6),0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([-((olength/counth)/1.6),0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([0,-((owidth/countv)/1.6),brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,-((owidth/countv)/1.6),0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module ploo()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
        translate([0,0,(brimheight/2)])
        cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([0,(owidth/countv)/(8/3),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,(owidth/countv)/(8/3),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([0,-((owidth/countv)/(8/3)),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,-((owidth/countv)/(8/3)),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([-((olength/counth)/1.6),0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([-((olength/counth)/1.6),0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module pleo()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
    }
    translate([-((olength/counth)/1.6),0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([-((olength/counth)/1.6),0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([0,(owidth/countv)/1.6,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,(owidth/countv)/1.6,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([0,-((owidth/countv)/1.6),brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,-((owidth/countv)/1.6),0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module pl1o()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([0,(owidth/countv)/(8/3),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,(owidth/countv)/(8/3),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([-((olength/counth)/1.6),0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([-((olength/counth)/1.6),0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}

module plloo()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([-((olength/counth)/(8/3)),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([-((olength/counth)/(8/3)),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([0,-((owidth/countv)/1.6),brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,-((owidth/countv)/1.6),0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module polo()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([0,-((owidth/countv)/(8/3)),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,-((owidth/countv)/(8/3)),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([-((olength/counth)/1.6),0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([-((olength/counth)/1.6),0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
    translate([(olength/counth)/1.6,0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([(olength/counth)/1.6,0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module pelo()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
        translate([0,0,(brimheight/2)])
        cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([(olength/counth)/(8/3),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([(olength/counth)/(8/3),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
        translate([-((olength/counth)/(8/3)),0,brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([-((olength/counth)/(8/3)),0,0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([0,-((owidth/countv)/1.6),brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([0,-((owidth/countv)/1.6),0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module p1lo()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([0,-((owidth/countv)/(8/3)),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,-((owidth/countv)/(8/3)),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([(olength/counth)/1.6,0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([(olength/counth)/1.6,0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);
}
module pallo()
{
    difference()
    {
        union()
        {
            translate([0,0,((cutterheight-brimheight)/2)+brimheight])
            cube(center=true,[(olength-(walls*(counth+1)))/counth,(owidth-(walls*(countv+1)))/countv,cutterheight-brimheight]);
            translate([0,0,(brimheight/2)])
            cube(center=true,[((olength-(walls*(counth+1)))/counth)-(2*innerbrim),((owidth-(walls*(countv+1)))/countv)-(2*innerbrim),brimheight]);
        }
        translate([0,-((owidth/countv)/(8/3)),brimheight])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+walls,h=cutterheight-brimheight);
        translate([0,-((owidth/countv)/(8/3)),0])
        scale([1,(owidth/countv)/(olength/counth)])
        cylinder($fn=faces,r=((olength/counth)/6)+innerbrim+walls,h=brimheight);
    }
    translate([-((olength/counth)/1.6),0,brimheight])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6),h=cutterheight-brimheight);
    translate([-((olength/counth)/1.6),0,0])
    scale([1,(owidth/countv)/(olength/counth)])
    cylinder($fn=faces,r=((olength/counth)/6)-innerbrim,h=brimheight);

}